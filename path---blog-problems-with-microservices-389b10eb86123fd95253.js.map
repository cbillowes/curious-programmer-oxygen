{"version":3,"sources":["webpack:///path---blog-problems-with-microservices-389b10eb86123fd95253.js","webpack:///./.cache/json/blog-problems-with-microservices.json"],"names":["webpackJsonp","427","module","exports","data","markdownRemark","html","timeToRead","excerpt","frontmatter","title","cover","date","category","tags","fields","slug","prev","next","pathContext","total"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,gBAAkBC,KAAA,mnYAAAC,WAAA,EAAAC,QAAA,0IAAAC,aAAqhZC,MAAA,8BAAAC,MAAA,6CAAAC,KAAA,4BAAAC,SAAA,OAAAC,MAAA,cAAqKC,QAAWC,KAAA,sCAA4CC,MAAST,QAAA,6MAAAD,WAAA,EAAAE,aAAqPC,MAAA,yCAAAC,MAAA,0CAAAC,KAAA,6BAAsIG,QAAWC,KAAA,iDAAuDE,MAASV,QAAA,yMAAAD,WAAA,EAAAE,aAAiPC,MAAA,kCAAAC,MAAA,4CAAAC,KAAA,6BAAiIG,QAAWC,KAAA,2CAAiDG,aAAgBH,KAAA,oCAAAI,MAAA,GAAAH,KAAA,+CAAAC,KAAA","file":"path---blog-problems-with-microservices-389b10eb86123fd95253.js","sourcesContent":["webpackJsonp([52806300143509],{\n\n/***/ 427:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<blockquote>\\n<p>After an interesting debate, I decided to explore some of the problems that\\nteams may face with microservices architecture.</p>\\n</blockquote>\\n<p>Trying to decipher a monolithic app is a real pain. Changing it is\\nscary. I don't always trust the test suites attached to codebases because\\nwith time and neglect, code and tests can rot. I do rely on them though.</p>\\n<p>The alternative to the monolith - microservices. It's become a buzz word.\\nHave services that do one thing and do it well. A separation of concerns when\\nit comes to the architecture of applications.</p>\\n<p>Yes! I am in, but wait... are we fully equipped to go down this path?</p>\\n<h2 id=\\\"analysis-paralysis\\\"><a href=\\\"#analysis-paralysis\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Analysis paralysis</h2>\\n<p>What if you could break your existing service down into 50 services. Another\\nperson on your team only identifies 5 services. The dev lead sees 10. I don't\\nknow if this exact scenario often happens but:</p>\\n<ul>\\n<li>How do you go about splitting them?</li>\\n<li>Will you be able to communicate the benefits of splitting them to business?</li>\\n<li>How does splitting your current services impact your consumers?</li>\\n</ul>\\n<h2 id=\\\"time-constraints\\\"><a href=\\\"#time-constraints\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Time constraints</h2>\\n<p>It takes time to set up each service:</p>\\n<ul>\\n<li>Create the code base</li>\\n<li>Configure version control</li>\\n<li>Configure dependencies</li>\\n<li>Set up scaffolding</li>\\n<li>Write the logic</li>\\n<li>Add useful logging</li>\\n<li>Configure environments</li>\\n<li>Setup continuous integration and deployment pipelines</li>\\n<li>Create an automated test suite</li>\\n<li>Documentation</li>\\n</ul>\\n<p>If you need to quickly produce a prototype or minimum viable product, you will\\nmost likely skip this. Unfortunately the reality is that many prototypes\\nand MVPs end up in production - for life. I suppose this is how an app becomes\\na monolith. If time is allocated to refactor and rework the architecture\\niteratively it could be saved.</p>\\n<h2 id=\\\"monolithic-architecture\\\"><a href=\\\"#monolithic-architecture\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Monolithic architecture</h2>\\n<p>We are trading off a monolithic application for monolithic architecture. If\\nthere isn't an overview (diagram or documentation) it can be hard to find\\nthe source code and endpoints for each service - especially if the naming\\nconvention is that of Marvel superheroes (I've not personally seen this but\\ndevelopers can be quite creative).</p>\\n<p>Luckily the services need to be configured to talk to other services so endpoints\\ncan be discovered once you have the source.</p>\\n<h2 id=\\\"unpredictable-environments\\\"><a href=\\\"#unpredictable-environments\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Unpredictable environments</h2>\\n<p>There can be a number of environments that need to be configured like\\nLocalhost, Development, QA, Staging and Production.</p>\\n<p>One would assume that environments would be aligned for each dependency. If I\\npoint to the QA <code class=\\\"language-text\\\">Billing</code> service, it would point to the QA <code class=\\\"language-text\\\">Accounts</code>\\nservice.</p>\\n<p>This is not always the case. Each team has its own constraints and\\nreasons for pointing to different environments - especially if their dependencies\\nare external. Oh boy, how much pain this can cause</p>\\n<h2 id=\\\"bloated-configurations\\\"><a href=\\\"#bloated-configurations\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Bloated configurations</h2>\\n<p>Configurations become bloated with endpoints and each environment needs to be\\nconfigured accordingly. This isn't too bad unless you are the consumer\\nusing a lot of dependencies.</p>\\n<h2 id=\\\"identifying-bugs\\\"><a href=\\\"#identifying-bugs\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Identifying bugs</h2>\\n<p>Bugs are hard to pin-point if there are no tests validating different\\nintegration points.</p>\\n<h3 id=\\\"unstable-data\\\"><a href=\\\"#unstable-data\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Unstable data</h3>\\n<p>Data can become unpredictable the lower the level of the environment especially\\nacross different teams. Strange and unpredictable behavior can cause skewed\\nresults during testing. Developers end up spending valuable time chasing down\\nwhere things went wrong.</p>\\n<h3 id=\\\"poor-logging\\\"><a href=\\\"#poor-logging\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Poor logging</h3>\\n<p>It is \\\"fairly easy\\\" to debug monolithic applications (provided you can get it\\nrunning) because you can step into the code. When it comes to microservices,\\nthe proof is in the logging.</p>\\n<p>Sadly, logging is sometimes an after thought. This makes it hard to\\nidentify problems in the stack.</p>\\n<p><strong>Events need to be chained</strong>. If you trigger an event, you need to be able to\\ntrack that event right through the stack in some form of visible logging\\nsolution like <a href=\\\"https://www.graylog.org\\\">GrayLog</a>.</p>\\n<h2 id=\\\"getting-buy-in\\\"><a href=\\\"#getting-buy-in\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Getting buy-in</h2>\\n<p>Not everyone believes that microservices are the solution. Every solution\\nhas trade-offs. When designing the architecture it is important to consider the\\nadvantages and disadvantages. The debates should be knowledgeable. I think it's\\na terrible idea to consider implementing something just because everyone else is\\ndoing it. That's resume-driven development - avoid it.</p>\\n<p>The team needs to support the application so they are responsible for the\\ndecisions they make. It is important to consider what negative impact a\\ndecision can have. Perhaps that could be the driving factor to deciding?</p>\\n<h2 id=\\\"my-final-thoughts\\\"><a href=\\\"#my-final-thoughts\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>My final thoughts</h2>\\n<p>I am not opposed to microservices. What I am opposed to is struggling\\nto get features tested due to unpredictable data and unstable environments.</p>\\n<p>Often tremendous pain is felt in the front-end consumer teams. Valuable time\\nis wasted trying to sift through a plethora of services and meaningless logs\\nto try pin-point exactly where stuff broke.</p>\\n<p>If the company and teams don't have the right mindset or environment,\\nmicroservices aren't necessarily the answer. What I've discussed highlights\\nsymptoms of different problems within teams and organizations that would have\\nan impact on a microservices architecture.</p>\\n<p>If this approach is taken, I believe that teams need:</p>\\n<ul>\\n<li>Efficient and reliable continuous delivery pipelines (<a href=\\\"https://www.docker.com/\\\">Docker</a>)</li>\\n<li>Visibility to <a href=\\\"https://www.paessler.com/prtg\\\">monitoring</a> of services</li>\\n<li>Overview <a href=\\\"https://trace.risingstack.com\\\">diagrams</a> and/or documentation of\\nthe architecture</li>\\n<li>Useful integration tests</li>\\n<li>Stable and predictable environments</li>\\n<li>Visible, useful and chained logs</li>\\n</ul>\\n<blockquote>\\n<p>Please share your experiences in the comments below.</p>\\n</blockquote>\\n<hr>\\n<p>Want to find out more about microservices?</p>\\n<ul>\\n<li><a href=\\\"https://blog.risingstack.com/how-enterprises-benefit-from-microservices-architectures/\\\">How Enterprises Benefit From Microservices Architectures</a></li>\\n<li><a href=\\\"http://martinfowler.com/articles/microservice-trade-offs.html\\\">Microservice Trade-Offs</a></li>\\n<li><a href=\\\"http://microservices.io/patterns/microservices.html\\\">Pattern: Microservices Architecture</a></li>\\n<li><a href=\\\"http://cloudacademy.com/blog/microservices-architecture-challenge-advantage-drawback/\\\">Microservices architecture: advantages and drawbacks</a></li>\\n<li><a href=\\\"http://sendachi.com/2016/microservices/the-benefits-of-microservices\\\">The Benefits Of Microservices</a></li>\\n</ul>\",\"timeToRead\":4,\"excerpt\":\"After an interesting debate, I decided to explore some of the problems that\\nteams may face with microservices architecture. Trying to…\",\"frontmatter\":{\"title\":\"Problems with microservices\",\"cover\":\"https://picsum.photos/1600/800/?image=1078\",\"date\":\"2016-05-13 23:10:19 +0200\",\"category\":\"tech\",\"tags\":[\"Technical\"]},\"fields\":{\"slug\":\"/blog/problems-with-microservices\"}},\"prev\":{\"excerpt\":\"Having a pet project has some powerful benefits. Do you have one? What\\nbenefits have you observed? I started this blog as a  course .\\nI decided to meticulously create the site from scratch keeping in…\",\"timeToRead\":3,\"frontmatter\":{\"title\":\"How this blog improved my productivity\",\"cover\":\"https://picsum.photos/1600/800/?image=9\",\"date\":\"2016-05-14 01:30:45 +0200\"},\"fields\":{\"slug\":\"/blog/how-this-blog-improved-my-productivity\"}},\"next\":{\"excerpt\":\"Just because it's always been done that way, doesn't mean it can't be changed. Personally there is nothing I can do about the way corporates work. There are a\\nlot of people involved and possibly a…\",\"timeToRead\":4,\"frontmatter\":{\"title\":\"Adjusting the corporate mindset\",\"cover\":\"https://picsum.photos/1600/800/?image=983\",\"date\":\"2016-05-11 23:16:23 +0200\"},\"fields\":{\"slug\":\"/blog/adjusting-the-corporate-mindset\"}}},\"pathContext\":{\"slug\":\"/blog/problems-with-microservices\",\"total\":57,\"prev\":\"/blog/how-this-blog-improved-my-productivity\",\"next\":\"/blog/adjusting-the-corporate-mindset\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---blog-problems-with-microservices-389b10eb86123fd95253.js","module.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<blockquote>\\n<p>After an interesting debate, I decided to explore some of the problems that\\nteams may face with microservices architecture.</p>\\n</blockquote>\\n<p>Trying to decipher a monolithic app is a real pain. Changing it is\\nscary. I don't always trust the test suites attached to codebases because\\nwith time and neglect, code and tests can rot. I do rely on them though.</p>\\n<p>The alternative to the monolith - microservices. It's become a buzz word.\\nHave services that do one thing and do it well. A separation of concerns when\\nit comes to the architecture of applications.</p>\\n<p>Yes! I am in, but wait... are we fully equipped to go down this path?</p>\\n<h2 id=\\\"analysis-paralysis\\\"><a href=\\\"#analysis-paralysis\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Analysis paralysis</h2>\\n<p>What if you could break your existing service down into 50 services. Another\\nperson on your team only identifies 5 services. The dev lead sees 10. I don't\\nknow if this exact scenario often happens but:</p>\\n<ul>\\n<li>How do you go about splitting them?</li>\\n<li>Will you be able to communicate the benefits of splitting them to business?</li>\\n<li>How does splitting your current services impact your consumers?</li>\\n</ul>\\n<h2 id=\\\"time-constraints\\\"><a href=\\\"#time-constraints\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Time constraints</h2>\\n<p>It takes time to set up each service:</p>\\n<ul>\\n<li>Create the code base</li>\\n<li>Configure version control</li>\\n<li>Configure dependencies</li>\\n<li>Set up scaffolding</li>\\n<li>Write the logic</li>\\n<li>Add useful logging</li>\\n<li>Configure environments</li>\\n<li>Setup continuous integration and deployment pipelines</li>\\n<li>Create an automated test suite</li>\\n<li>Documentation</li>\\n</ul>\\n<p>If you need to quickly produce a prototype or minimum viable product, you will\\nmost likely skip this. Unfortunately the reality is that many prototypes\\nand MVPs end up in production - for life. I suppose this is how an app becomes\\na monolith. If time is allocated to refactor and rework the architecture\\niteratively it could be saved.</p>\\n<h2 id=\\\"monolithic-architecture\\\"><a href=\\\"#monolithic-architecture\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Monolithic architecture</h2>\\n<p>We are trading off a monolithic application for monolithic architecture. If\\nthere isn't an overview (diagram or documentation) it can be hard to find\\nthe source code and endpoints for each service - especially if the naming\\nconvention is that of Marvel superheroes (I've not personally seen this but\\ndevelopers can be quite creative).</p>\\n<p>Luckily the services need to be configured to talk to other services so endpoints\\ncan be discovered once you have the source.</p>\\n<h2 id=\\\"unpredictable-environments\\\"><a href=\\\"#unpredictable-environments\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Unpredictable environments</h2>\\n<p>There can be a number of environments that need to be configured like\\nLocalhost, Development, QA, Staging and Production.</p>\\n<p>One would assume that environments would be aligned for each dependency. If I\\npoint to the QA <code class=\\\"language-text\\\">Billing</code> service, it would point to the QA <code class=\\\"language-text\\\">Accounts</code>\\nservice.</p>\\n<p>This is not always the case. Each team has its own constraints and\\nreasons for pointing to different environments - especially if their dependencies\\nare external. Oh boy, how much pain this can cause</p>\\n<h2 id=\\\"bloated-configurations\\\"><a href=\\\"#bloated-configurations\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Bloated configurations</h2>\\n<p>Configurations become bloated with endpoints and each environment needs to be\\nconfigured accordingly. This isn't too bad unless you are the consumer\\nusing a lot of dependencies.</p>\\n<h2 id=\\\"identifying-bugs\\\"><a href=\\\"#identifying-bugs\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Identifying bugs</h2>\\n<p>Bugs are hard to pin-point if there are no tests validating different\\nintegration points.</p>\\n<h3 id=\\\"unstable-data\\\"><a href=\\\"#unstable-data\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Unstable data</h3>\\n<p>Data can become unpredictable the lower the level of the environment especially\\nacross different teams. Strange and unpredictable behavior can cause skewed\\nresults during testing. Developers end up spending valuable time chasing down\\nwhere things went wrong.</p>\\n<h3 id=\\\"poor-logging\\\"><a href=\\\"#poor-logging\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Poor logging</h3>\\n<p>It is \\\"fairly easy\\\" to debug monolithic applications (provided you can get it\\nrunning) because you can step into the code. When it comes to microservices,\\nthe proof is in the logging.</p>\\n<p>Sadly, logging is sometimes an after thought. This makes it hard to\\nidentify problems in the stack.</p>\\n<p><strong>Events need to be chained</strong>. If you trigger an event, you need to be able to\\ntrack that event right through the stack in some form of visible logging\\nsolution like <a href=\\\"https://www.graylog.org\\\">GrayLog</a>.</p>\\n<h2 id=\\\"getting-buy-in\\\"><a href=\\\"#getting-buy-in\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Getting buy-in</h2>\\n<p>Not everyone believes that microservices are the solution. Every solution\\nhas trade-offs. When designing the architecture it is important to consider the\\nadvantages and disadvantages. The debates should be knowledgeable. I think it's\\na terrible idea to consider implementing something just because everyone else is\\ndoing it. That's resume-driven development - avoid it.</p>\\n<p>The team needs to support the application so they are responsible for the\\ndecisions they make. It is important to consider what negative impact a\\ndecision can have. Perhaps that could be the driving factor to deciding?</p>\\n<h2 id=\\\"my-final-thoughts\\\"><a href=\\\"#my-final-thoughts\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>My final thoughts</h2>\\n<p>I am not opposed to microservices. What I am opposed to is struggling\\nto get features tested due to unpredictable data and unstable environments.</p>\\n<p>Often tremendous pain is felt in the front-end consumer teams. Valuable time\\nis wasted trying to sift through a plethora of services and meaningless logs\\nto try pin-point exactly where stuff broke.</p>\\n<p>If the company and teams don't have the right mindset or environment,\\nmicroservices aren't necessarily the answer. What I've discussed highlights\\nsymptoms of different problems within teams and organizations that would have\\nan impact on a microservices architecture.</p>\\n<p>If this approach is taken, I believe that teams need:</p>\\n<ul>\\n<li>Efficient and reliable continuous delivery pipelines (<a href=\\\"https://www.docker.com/\\\">Docker</a>)</li>\\n<li>Visibility to <a href=\\\"https://www.paessler.com/prtg\\\">monitoring</a> of services</li>\\n<li>Overview <a href=\\\"https://trace.risingstack.com\\\">diagrams</a> and/or documentation of\\nthe architecture</li>\\n<li>Useful integration tests</li>\\n<li>Stable and predictable environments</li>\\n<li>Visible, useful and chained logs</li>\\n</ul>\\n<blockquote>\\n<p>Please share your experiences in the comments below.</p>\\n</blockquote>\\n<hr>\\n<p>Want to find out more about microservices?</p>\\n<ul>\\n<li><a href=\\\"https://blog.risingstack.com/how-enterprises-benefit-from-microservices-architectures/\\\">How Enterprises Benefit From Microservices Architectures</a></li>\\n<li><a href=\\\"http://martinfowler.com/articles/microservice-trade-offs.html\\\">Microservice Trade-Offs</a></li>\\n<li><a href=\\\"http://microservices.io/patterns/microservices.html\\\">Pattern: Microservices Architecture</a></li>\\n<li><a href=\\\"http://cloudacademy.com/blog/microservices-architecture-challenge-advantage-drawback/\\\">Microservices architecture: advantages and drawbacks</a></li>\\n<li><a href=\\\"http://sendachi.com/2016/microservices/the-benefits-of-microservices\\\">The Benefits Of Microservices</a></li>\\n</ul>\",\"timeToRead\":4,\"excerpt\":\"After an interesting debate, I decided to explore some of the problems that\\nteams may face with microservices architecture. Trying to…\",\"frontmatter\":{\"title\":\"Problems with microservices\",\"cover\":\"https://picsum.photos/1600/800/?image=1078\",\"date\":\"2016-05-13 23:10:19 +0200\",\"category\":\"tech\",\"tags\":[\"Technical\"]},\"fields\":{\"slug\":\"/blog/problems-with-microservices\"}},\"prev\":{\"excerpt\":\"Having a pet project has some powerful benefits. Do you have one? What\\nbenefits have you observed? I started this blog as a  course .\\nI decided to meticulously create the site from scratch keeping in…\",\"timeToRead\":3,\"frontmatter\":{\"title\":\"How this blog improved my productivity\",\"cover\":\"https://picsum.photos/1600/800/?image=9\",\"date\":\"2016-05-14 01:30:45 +0200\"},\"fields\":{\"slug\":\"/blog/how-this-blog-improved-my-productivity\"}},\"next\":{\"excerpt\":\"Just because it's always been done that way, doesn't mean it can't be changed. Personally there is nothing I can do about the way corporates work. There are a\\nlot of people involved and possibly a…\",\"timeToRead\":4,\"frontmatter\":{\"title\":\"Adjusting the corporate mindset\",\"cover\":\"https://picsum.photos/1600/800/?image=983\",\"date\":\"2016-05-11 23:16:23 +0200\"},\"fields\":{\"slug\":\"/blog/adjusting-the-corporate-mindset\"}}},\"pathContext\":{\"slug\":\"/blog/problems-with-microservices\",\"total\":57,\"prev\":\"/blog/how-this-blog-improved-my-productivity\",\"next\":\"/blog/adjusting-the-corporate-mindset\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/blog-problems-with-microservices.json\n// module id = 427\n// module chunks = 52806300143509"],"sourceRoot":""}